# Copyright 2022 Amazon.com and its affiliates; all rights reserved. This file is Amazon Web Services Content and may not be duplicated or distributed without permission.
AWSTemplateFormatVersion: "2010-09-09"
Description: "Example deploy of codepipeline, codebuild, docker image into ECR"

Parameters:

  StaticAssetsBucket:
    Type: String
    Description: (Optional) Bucket for static assets that live outside of the pipeline (e.g. data for seeding)
    Default: 'gameday-codecommit-ld'
  # StaticAssetsKeyPrefix:
  #   Type: String
  #   Description: (Optional) Bucket prefix for static assets that live outside of the pipeline (e.g. data for seeding)
  #   Default: ''

  TeamWorkerSourceKey:
    Default: aws_gameday_api.zip
    Description: S3 key for the dummy zip file containing the buildspec_prod.yml and dockerfile
    Type: String

Resources:

  # CodeBuild needs a place to put artifacts in the interim.
  CodePipelineArtifactBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete

  MyAppImage:
    Type: AWS::ECR::Repository

  MyAppRepo:
    Type: AWS::CodeCommit::Repository
    Properties:
      RepositoryName: my-app-repo-ld
      RepositoryDescription:  This is the repository in CodeCommit
      Code:
        S3:
          Bucket: !Ref StaticAssetsBucket
          Key: !Join
          - ''
          # - - !Ref StaticAssetsKeyPrefix
          - - !Ref TeamWorkerSourceKey
    #DependsOn: PipelineInit

  DockerBuildCodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: "CODEPIPELINE"
      Source:
        Type: "CODEPIPELINE"
        BuildSpec: "buildspec_prod.yml"
      Environment:
        PrivilegedMode: true
        ComputeType: "BUILD_GENERAL1_SMALL"
        Image: "aws/codebuild/standard:5.0"
        Type: "LINUX_CONTAINER"
        EnvironmentVariables:
          - Name: AWS_ACCOUNT_ID
            Value: !Ref AWS::AccountId
            Type: PLAINTEXT
          - Name: REPOSITORY_URI
            Value: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${MyAppImage}
            Type: PLAINTEXT
      Name: !Sub ${AWS::StackName}-image-build
      ServiceRole: !Ref CodePipelineServiceRole


  MyAppPipeline:
    Type: 'AWS::CodePipeline::Pipeline'
    Properties:
      ArtifactStore:
        Type: S3
        Location: !Ref CodePipelineArtifactBucket
      Name: !Sub ${AWS::StackName}
      RoleArn: !GetAtt CodePipelineServiceRole.Arn
      Stages:
        - Name: 'Source'
          Actions:
            - Name: 'Source'
              ActionTypeId:
                Category: 'Source'
                Owner: 'AWS'
                Version: '1'
                Provider: CodeCommit
              OutputArtifacts:
                - Name: SourceArtifact
              Configuration:
                BranchName: main
                RepositoryName: my-app-repo-ld
              RunOrder: 1
        - Name: 'Build_Docker_Container'
          Actions:
            - Name: CodeBuild
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              InputArtifacts:
                - Name: SourceArtifact
              OutputArtifacts:
                - Name: BuildArtifact
              Configuration:
                ProjectName: !Ref DockerBuildCodeBuildProject
              RunOrder: 1

  # CodePipeline does not automatically create this for you as part of
  # creation, but this role is for the CWE Hook to trigger CodePipeline once
  # there's an update in CodeCommit. Otherwise, we have to have CodePipeline
  # poll for changes, which is slower.
  PipelineCloudWatchEventRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - events.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: cwe-pipeline-execution
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: codepipeline:StartPipelineExecution
                Resource: !Sub arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${MyAppPipeline}

  # This role is used by CodePipeline to trigger deployments
  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "codepipeline.amazonaws.com"
                - "cloudformation.amazonaws.com"
                - "codedeploy.amazonaws.com"
                - "codebuild.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource: "*"
                Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketVersioning
              - Resource: "arn:aws:s3:::*"
                Effect: Allow
                Action:
                  - s3:PutObject
              - Resource: "*"
                Effect: Allow
                Action:
                  - codecommit:*
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuilds
                  - iam:PassRole
                  - iam:CreateRole
                  - iam:DetachRolePolicy
                  - iam:AttachRolePolicy
                  - iam:PassRole
                  - iam:PutRolePolicy
                  - cloudwatch:*
              - Resource: "*"
                Effect: Allow
                Action:
                  - ecs:*
              - Resource: "*"
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - ecr:GetAuthorizationToken
              - Resource: !Sub arn:aws:s3:::${CodePipelineArtifactBucket}/*
                Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:GetObjectVersion
              - Resource:
                  - !Sub arn:aws:s3:::codepipeline-${AWS::Region}-*
                Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetObjectVersion
              - Effect: Allow
                Action:
                  - ecr:*
                Resource:
                  - !GetAtt MyAppImage.Arn
              - Effect: Allow
                Action:
                  - lambda:InvokeFunction
                Resource: "*"